syntax = "proto3";
package zetachain.zetacore.fungible;

import "cosmos/base/query/v1beta1/pagination.proto";
import "fungible/foreign_coins.proto";
import "fungible/params.proto";
import "fungible/system_contract.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/zeta-chain/node/x/fungible/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/zeta-chain/zetacore/fungible/params";
  }
  // Queries a ForeignCoins by index.
  rpc ForeignCoins(QueryGetForeignCoinsRequest) returns (QueryGetForeignCoinsResponse) {
    option (google.api.http).get = "/zeta-chain/zetacore/fungible/foreign_coins/{index}";
  }

  // Queries a list of ForeignCoins items.
  rpc ForeignCoinsAll(QueryAllForeignCoinsRequest) returns (QueryAllForeignCoinsResponse) {
    option (google.api.http).get = "/zeta-chain/zetacore/fungible/foreign_coins";
  }

  // Queries SystemContract
  rpc SystemContract(QueryGetSystemContractRequest) returns (QueryGetSystemContractResponse) {
    option (google.api.http).get = "/zeta-chain/zetacore/fungible/system_contract";
  }

  // Queries the address of a gas stability pool on a given chain.
  rpc GasStabilityPoolAddress(QueryGetGasStabilityPoolAddress) returns (QueryGetGasStabilityPoolAddressResponse) {
    option (google.api.http).get = "/zeta-chain/zetacore/fungible/gas_stability_pool_address";
  }

  // Queries the balance of a gas stability pool on a given chain.
  rpc GasStabilityPoolBalance(QueryGetGasStabilityPoolBalance) returns (QueryGetGasStabilityPoolBalanceResponse) {
    option (google.api.http).get = "/zeta-chain/zetacore/fungible/gas_stability_pool_balance/{chain_id}";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetForeignCoinsRequest {
  string index = 1;
}

message QueryGetForeignCoinsResponse {
  ForeignCoins foreignCoins = 1 [(gogoproto.nullable) = false];
}

message QueryAllForeignCoinsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllForeignCoinsResponse {
  repeated ForeignCoins foreignCoins = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetSystemContractRequest {}

message QueryGetSystemContractResponse {
  SystemContract SystemContract = 1 [(gogoproto.nullable) = false];
}

message QueryGetGasStabilityPoolAddress {}

message QueryGetGasStabilityPoolAddressResponse {
  string cosmos_address = 1;
  string evm_address = 2;
}

message QueryGetGasStabilityPoolBalance {
  int64 chain_id = 1;
}

message QueryGetGasStabilityPoolBalanceResponse {
  string contract_address = 1;
  string balance = 2;
}
